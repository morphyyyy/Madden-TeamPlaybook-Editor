<UserControl 
    x:Class="MaddenTeamPlaybookEditor.User_Controls.PlayModal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:UserControls="clr-namespace:MaddenTeamPlaybookEditor.User_Controls"
    xmlns:MaddenTeamPlaybook="clr-namespace:Madden.TeamPlaybook"
    xmlns:ViewModels="clr-namespace:MaddenTeamPlaybookEditor.ViewModels"
    xmlns:classes="clr-namespace:MaddenTeamPlaybookEditor.Classes"
    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
    x:Name="uclPlayModal"
    AllowDrop="True">
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Canvas x:Name="cvsField" Grid.Column="0" Height="900" Width="533" VerticalAlignment="Top">
            <Canvas.ContextMenu>
                <ContextMenu>
                    <TextBlock  
                        Background="Transparent" 
                        Foreground="LightGreen"
                        Text="Save Playart"
                        MouseUp="savePlayart"
                        />
                </ContextMenu>
            </Canvas.ContextMenu>

            <Canvas Name="bdrField"
                Width="533"
                Height="1048"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                Grid.Column="1"
                Margin="0,-100.5"
                OpacityMask="{StaticResource FieldBrush}"
                Background="{DynamicResource TextBrush}">

                <Line X1="0" Y1="749" X2="533" Y2="749" StrokeThickness="5" Grid.Column="1" Stroke="{DynamicResource PrimaryBrush}" Opacity=".5"/>

                <Line X1="0" Y1="649" X2="533" Y2="649" StrokeThickness="5" Grid.Column="1" Stroke="{DynamicResource SecondaryBrush}" Opacity=".5"/>

                <Line X1="74" Y1="0" X2="74" Y2="1048" StrokeThickness="3" Grid.Column="1" Stroke="{DynamicResource QuaternaryBrush}" Opacity=".2"/>

                <Line X1="458.5" Y1="0" X2="458.5" Y2="1048" StrokeThickness="3" Grid.Column="1" Stroke="{DynamicResource QuaternaryBrush}" Opacity=".2"/>

            </Canvas>

            <Canvas x:Name="cvsPlayart" Height="750" Width="533">
                
                <ItemsControl 
                    IsEnabled="true"
                    x:Name="iclPSALs"
                    DockPanel.Dock="Top"
                    ItemsSource="{Binding PlayerPlayartView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Canvas.Left="266.5"
                    Canvas.Top="650"
                    MouseDown="iclPSALs_MouseDown">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas x:Name="cvsPlayerRoutes"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas>
                                <UserControls:Playart
                                    x:Name="clnPSAL"
                                    Player="{Binding}"
                                    PSALView="True"
                                    Scale="2"
                                    AbsolutePositioning="True"/>
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter 
                            Property="Canvas.Left" 
                            Value="{Binding XY.X, Mode=TwoWay}"/>
                            <Setter 
                            Property="Canvas.Top" 
                            Value="{Binding XY.Y, Mode=TwoWay}"/>
                            <Style.Triggers>

                                <Trigger Property="UserControls:PlayerIcon.IsMouseOver" Value="True">
                                    <Setter Property="UserControls:PlayerIcon.Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="White" Opacity="1" BlurRadius="20"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <!--<Trigger Property="Canvas.IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleX)"
                                                    From="1" To="2" Duration="0:0:0.2"/>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleY)"
                                                    From="1" To="2" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                        
                                <Trigger Property="Canvas.IsMouseOver" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleX)"
                                                    From="2" To="1" Duration="0:0:0.2"/>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleY)"
                                                    From="2" To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>-->

                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <ItemsControl 
                    IsEnabled="True"
                    x:Name="iclIcons"
                    DockPanel.Dock="Top"
                    ItemsSource="{Binding PlayerPlayartView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Canvas.Left="266.5"
                    Canvas.Top="650"
                    MouseDown="iclIcons_MouseDown">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas x:Name="cvsPlayerIcons"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas>
                                <UserControls:PlayerIcon
                                    x:Name="clnIcon"
                                    Player="{Binding}"
                                    Scale="2"
                                    ShowPosition="True"
                                    AbsolutePositioning="True"/>
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter 
                                Property="Canvas.Left" 
                                Value="{Binding XY.X}"/>
                            <Setter 
                                Property="Canvas.Top" 
                                Value="{Binding XY.Y}"/>
                            <Style.Triggers>

                                <Trigger Property="UserControls:PlayerIcon.IsMouseOver" Value="True">
                                    <Setter Property="UserControls:PlayerIcon.Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="0" Color="White" Opacity="1" BlurRadius="20"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="UserControls:PlayerIcon.LayoutTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <!--<Trigger Property="Canvas.IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleX)"
                                                    From="1" To="2" Duration="0:0:0.2"/>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleY)"
                                                    From="1" To="2" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                        
                                <Trigger Property="Canvas.IsMouseOver" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleX)"
                                                    From="2" To="1" Duration="0:0:0.2"/>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Canvas).(RenderTransform).(ScaleTransform.ScaleY)"
                                                    From="2" To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>-->

                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
                
            </Canvas>

        </Canvas>

        <Grid Margin="5" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="740" Width="740"/>
            </Grid.ColumnDefinitions>
            
            <!--<TabControl 
                x:Name="tabPlayControls"
                Background="Transparent" 
                BorderBrush="Transparent" 
                DockPanel.Dock="Top"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Stretch">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label Name="Panel">
                                        <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="5,0"/>
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                                            <Setter TargetName="Panel" Property="Foreground" Value="LightGreen" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                                            <Setter TargetName="Panel" Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>-->

            <GroupBox Header="Play" x:Name="tabPlay" Grid.Row="0" Margin="5" Height="600">
                <DockPanel Margin="5">
                    <TextBox Margin="5"
                        FontFamily="Tahoma" 
                        FontSize="24"
                        BorderThickness="0"
                        FontWeight="Bold"
                        Text="{Binding PBPL.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Left"
                        DockPanel.Dock="Top"/>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="PBPL" Grid.Column="0" Margin="5">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="pbpl"/>
                                <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding PBPL.pbpl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="COMF"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding PBPL.COMF, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="2" Grid.Row="0" Text="PKGE"/>
                                <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding PBPL.PKGE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="PLYL" Grid.Column="1" Margin="5">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="PLYL ID"/>
                                <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding PLYL.plyl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="plylChanged"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="Blocking"/>
                                <ComboBox x:Name="cbxPLYL_SRMM" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={x:Static MaddenTeamPlaybook:PLYL.BlockingScheme}}" SelectedValue="{Binding PLYL.SRMM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" SelectionChanged="plylChanged" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Column="2" Grid.Row="0" Text="Situation"/>
                                <ComboBox x:Name="cbxPLYL_SITT" Grid.Column="2" Grid.Row="1" ItemsSource="{Binding Source={x:Static MaddenTeamPlaybook:PLYL.Situation}}" SelectedValue="{Binding PLYL.SITT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Column="3" Grid.Row="0" Text="Play Type"/>
                                <ComboBox x:Name="cbxPLYL_PLYT" Grid.Column="3" Grid.Row="1" ItemsSource="{Binding Source={x:Static ViewModels:TeamPlaybook.PlayType}}" SelectedValue="{Binding PLYL.PLYT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Column="4" Grid.Row="0" Text="risk"/>
                                <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding PLYL.risk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="plylChanged"/>
                                <TextBlock Grid.Column="5" Grid.Row="0" Text="motn"/>
                                <TextBox Grid.Column="5" Grid.Row="1" Text="{Binding PLYL.motn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="plylChanged"/>
                                <TextBlock Grid.Column="6" Grid.Row="0" Text="phlp"/>
                                <TextBox Grid.Column="6" Grid.Row="1" Text="{Binding PLYL.phlp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="plylChanged"/>
                                <TextBlock Grid.Column="7" Grid.Row="0" Text="vpos"/>
                                <TextBox Grid.Column="7" Grid.Row="1" Text="{Binding PLYL.vpos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="plylChanged" ToolTip="VIP Position (poso)"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0" LastChildFill="False">
                            <GroupBox Header="PLRD" DockPanel.Dock="Top" Margin="5">
                                <ComboBox x:Name="cbxPLRD_hole" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={x:Static MaddenTeamPlaybook:PLRD.Hole}}" SelectedValue="{Binding PLRD.hole, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" SelectionChanged="plylChanged" HorizontalAlignment="Left"/>
                            </GroupBox>
                            <GroupBox Header="PLPD" DockPanel.Dock="Top" Margin="5">
                                <DataGrid 
                                    ItemsSource="{Binding PLPD.progressions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HorizontalAlignment="Stretch"/>
                            </GroupBox>
                        </DockPanel>
                        <DockPanel Grid.Column="1" LastChildFill="False">
                            <GroupBox Header="PBCC" DockPanel.Dock="Top" Margin="5">
                                <DataGrid 
                                    ItemsSource="{Binding PBCC, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HorizontalAlignment="Stretch"/>
                            </GroupBox>
                            <GroupBox Header="PLCM" DockPanel.Dock="Top" Margin="5">
                                <DataGrid 
                                    ItemsSource="{Binding PLCM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HorizontalAlignment="Stretch"/>
                            </GroupBox>
                            <GroupBox Header="PPCT" DockPanel.Dock="Top" Margin="5">
                                <DataGrid 
                                    ItemsSource="{Binding PPCT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HorizontalAlignment="Stretch"/>
                            </GroupBox>
                        </DockPanel>
                    </Grid>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="Flags" Grid.Column="0" DockPanel.Dock="Top" Margin="5">
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Margin="5" Grid.Column="0">
                                        <CheckBox Content="Block And Release" IsChecked="{Binding BlockAndRelease, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Block Left" IsChecked="{Binding BlockLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Block Right" IsChecked="{Binding BlockRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Can Flip" IsChecked="{Binding CanFlip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Complement Start" IsChecked="{Binding StartComplement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Complement End" IsChecked="{Binding EndComplement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Contain Right" IsChecked="{Binding ContainRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Contain Left" IsChecked="{Binding ContainLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Cover 2 Defense" IsChecked="{Binding Cover2Defense, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Coverage Shell" IsChecked="{Binding CoverageShell, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Disable Lock On" IsChecked="{Binding DisableLockOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Is Boosted" IsChecked="{Binding IsBoosted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="No Wide Align" IsChecked="{Binding NoWideAlign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="No Playmaker" IsChecked="{Binding NoPlaymaker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Option Stop" IsChecked="{Binding OptionStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Margin="5" Grid.Column="1">
                                        <CheckBox Content="Outside Run Stop" IsChecked="{Binding OutsideRunStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Pass Short" IsChecked="{Binding PassShort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Pass Medium" IsChecked="{Binding PassMedium, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Pass Long" IsChecked="{Binding PassLong, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Pass Right" IsChecked="{Binding PassRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Pass Left" IsChecked="{Binding PassLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Pass Middle" IsChecked="{Binding PassMiddle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Punt Left" IsChecked="{Binding PuntLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Punt Right" IsChecked="{Binding PuntRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Punt Sky" IsChecked="{Binding PuntSky, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="QB Scramble Stop" IsChecked="{Binding QBScrambleStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Run Left" IsChecked="{Binding RunLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Run Middle" IsChecked="{Binding RunMiddle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Run Right" IsChecked="{Binding RunRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <CheckBox Content="Snap To Primary" IsChecked="{Binding SnapToVIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                </Grid>
                            </ScrollViewer>                        
                        </GroupBox>
                        <GroupBox Header="PBAI" Grid.Column="1" DockPanel.Dock="Top" Margin="5">
                            <ListView 
                                x:Name="lvwSituations" 
                                Margin="5,1"
                                ScrollViewer.CanContentScroll="False"
                                ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                BorderBrush="Transparent"
                                Background="Transparent"
                                BorderThickness="0"
                                >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <UserControls:Situation situation="{Binding}" showPlayName="False"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <classes:UniformGridOrientations Orientation="Vertical" FlowDirection="LeftToRight" Columns="2" MaxWidth="400"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                            </ListView>
                        </GroupBox>
                    </Grid>
                </DockPanel>
            </GroupBox>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
            
                <GroupBox Header="Player" x:Name="tabPlayer" Grid.Column="0" Margin="5">
                    <DockPanel Margin="5" LastChildFill="False">
                        <TextBlock DockPanel.Dock="Top" Margin="5"
                            FontFamily="Tahoma" 
                            FontSize="24"
                            FontWeight="Bold"
                            Text="{Binding Label}" 
                            HorizontalAlignment="Left"/>
                        <!--<GroupBox Header="SETP" DockPanel.Dock="Top" Margin="5">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="SGT_"/>
                                <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding SETP.SGT_, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated" ToolTip="Set Group Type"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="arti"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding SETP.arti, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated" ToolTip="Art Icon"/>
                                <TextBlock Grid.Column="2" Grid.Row="0" Text="tabo"/>
                                <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding SETP.tabo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="3" Grid.Row="0" Text="poso"/>
                                <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding SETP.poso, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="4" Grid.Row="0" Text="flas"/>
                                <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding SETP.flas, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="5" Grid.Row="0" Text="DPos"/>
                                <TextBox Grid.Column="5" Grid.Row="1" Text="{Binding SETP.DPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="6" Grid.Row="0" Text="EPos"/>
                                <TextBox Grid.Column="6" Grid.Row="1" Text="{Binding SETP.EPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="7" Grid.Row="0" Text="fmtx"/>
                                <TextBox Grid.Column="7" Grid.Row="1" Text="{Binding SETP.fmtx, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="8" Grid.Row="0" Text="artx"/>
                                <TextBox Grid.Column="8" Grid.Row="1" Text="{Binding SETP.artx, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="9" Grid.Row="0" Text="fmty"/>
                                <TextBox Grid.Column="9" Grid.Row="1" Text="{Binding SETP.fmty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="10" Grid.Row="0" Text="arty"/>
                                <TextBox Grid.Column="10" Grid.Row="1" Text="{Binding SETP.arty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="SETG" DockPanel.Dock="Top" Margin="5">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="SF__"/>
                                <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding SETG.SF__, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="x___"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding SETG.x___, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="2" Grid.Row="0" Text="y___"/>
                                <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding SETG.y___, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="3" Grid.Row="0" Text="fx__"/>
                                <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding SETG.fx__, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="4" Grid.Row="0" Text="fy__"/>
                                <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding SETG.fy__, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="5" Grid.Row="0" Text="anm_"/>
                                <TextBox Grid.Column="5" Grid.Row="1" Text="{Binding SETG.anm_, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="6" Grid.Row="0" Text="dir_"/>
                                <TextBox Grid.Column="6" Grid.Row="1" Text="{Binding SETG.dir_, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="7" Grid.Row="0" Text="fanm"/>
                                <TextBox Grid.Column="7" Grid.Row="1" Text="{Binding SETG.fanm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="8" Grid.Row="0" Text="fdir"/>
                                <TextBox Grid.Column="8" Grid.Row="1" Text="{Binding SETG.fdir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                            </Grid>
                        </GroupBox>-->
                        <GroupBox Header="SRFT" DockPanel.Dock="Top" Margin="5">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                            
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="SIDE"/>
                                <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding SRFT.SIDE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="YOFF"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding SRFT.YOFF, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="2" Grid.Row="0" Text="TECH"/>
                                <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding SRFT.TECH, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="3" Grid.Row="0" Text="STAN"/>
                                <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding SRFT.STAN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="0" Grid.Row="3" Text="Strong" HorizontalAlignment="Right"/>
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="Weak" HorizontalAlignment="Right"/>
                                <TextBlock Grid.Column="1" Grid.Row="2" Text="PRI"/>
                                <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding SRFT.PRIS, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="2" Grid.Row="2" Text="GAP"/>
                                <TextBox Grid.Column="2" Grid.Row="3" Text="{Binding SRFT.GAPS, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBlock Grid.Column="3" Grid.Row="2" Text="ASS"/>
                                <TextBox Grid.Column="3" Grid.Row="3" Text="{Binding SRFT.ASSS, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding SRFT.PRIW, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBox Grid.Column="2" Grid.Row="4" Text="{Binding SRFT.GAPW, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                <TextBox Grid.Column="3" Grid.Row="4" Text="{Binding SRFT.ASSW, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                            </Grid>
                        </GroupBox>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                            <!--<GroupBox Header="PLYS" DockPanel.Dock="Top" Margin="5">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="PSAL"/>
                                    <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding PLYS.PSAL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="ARTL"/>
                                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding PLYS.ARTL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                    <TextBlock Grid.Column="2" Grid.Row="0" Text="PLRR"/>
                                    <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding PLYS.PLRR, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtPlayerUpdated"/>
                                </Grid>
                            </GroupBox>-->
                            <GroupBox Header="PSAL" DockPanel.Dock="Top" Margin="5">
                                <DataGrid x:Name="dgdPSALs"
                                    ItemsSource="{Binding PSAL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HorizontalAlignment="Stretch"
                                    CurrentCellChanged="dgdPSALupdated">
                                    <DataGrid.ContextMenu>
                                        <ContextMenu>
                                            <TextBlock Text="Insert" MouseUp="PSALinsertStep"/>
                                            <TextBlock Text="Append" MouseUp="PSALappendStep"/>
                                            <TextBlock Text="Delete" MouseUp="PSALdeleteStep"/>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                </DataGrid>
                            </GroupBox>
                        </DockPanel>
                    </DockPanel>
                </GroupBox>

                <GroupBox Header="PSALs" x:Name="gbxPSALs" Grid.Column="1" Margin="5">

                    <TreeView x:Name="tvwPSALs"
                        Background="Transparent"
                        BorderBrush="{x:Null}"
                        Foreground="{x:Null}"
                        DockPanel.Dock="Top"
                        TreeViewItem.Selected="tvwPSALs_Selected"
                        AllowDrop="True"
                        ItemsSource="{Binding SubFormation.Formation.Playbook.PSALs}"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden">

                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <TextBlock Text="Add New PSAL" MouseUp="AddNewPSAL"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                        
                        <TreeView.Resources>

                            <ResourceDictionary>

                                <HierarchicalDataTemplate DataType="{x:Type ViewModels:FormationVM}" ItemsSource="{Binding SubFormations}">

                                    <HierarchicalDataTemplate.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource tviTeamColorStyle}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </HierarchicalDataTemplate.ItemContainerStyle>

                                    <TextBlock 
                                        Text="{Binding PBFM.name}"
                                        TextWrapping="NoWrap" 
                                        TextAlignment="Center"
                                        FontSize="26"
                                        Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}"/>

                                </HierarchicalDataTemplate>

                                <HierarchicalDataTemplate DataType="{x:Type ViewModels:SubFormationVM}" ItemsSource="{Binding Plays}">

                                    <HierarchicalDataTemplate.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource tviTeamColorStyle}">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid FlowDirection="LeftToRight" IsItemsHost="True" Margin="0,0" MaxWidth="592" Columns="3"/>
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </HierarchicalDataTemplate.ItemContainerStyle>

                                    <TextBlock 
                                        Text="{Binding PBST.name}"
                                        TextWrapping="NoWrap" 
                                        TextAlignment="Center"
                                        FontSize="26"
                                        Width="270"
                                        Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}"/>

                                </HierarchicalDataTemplate>

                                <HierarchicalDataTemplate DataType="{x:Type ViewModels:PlayVM}">

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        
                                        <UserControls:Play Grid.Row="0"
                                            x:Name="uclPlay"
                                            play="{Binding}"/>

                                        <TextBlock  Grid.Row="1"
                                            Text="{Binding PBPL.name}"
                                            DockPanel.Dock="Top" 
                                            FontFamily="DK Crayon Crumble" 
                                            FontSize="20"
                                            TextWrapping="Wrap" 
                                            TextAlignment="Center" 
                                            Background="Transparent" 
                                            Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}"/>

                                    </Grid>

                                </HierarchicalDataTemplate>

                            </ResourceDictionary>

                        </TreeView.Resources>

                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource tviTeamColorStyle}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="LayoutTransform">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.55" ScaleY="0.55"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>

                    </TreeView>

                </GroupBox>

            </Grid>
            
        </Grid>

    </Grid>
    
</UserControl>
